{"version":3,"sources":["Circuits.png","logo.svg","Connect4.png","Qupcakes.png","Components/YoutubeEmbed.js","Components/CaesarShift.js","Components/Bits.js","Components/OneWay.js","Components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["YoutubeEmbed","embedId","className","width","height","src","frameBorder","allow","allowFullScreen","title","React","Component","OneWay","props","get_rand_int","n","Math","floor","random","primes","pairs","max_n","mult_trials","factor_trials","start_time","parseInt","time","state","correct","i","attempts","started","mult_mode","curr_time","m","user_value","finished","guesses","update_pairs","bind","start_trials","handleChange","handleSubmit","this","interval","setInterval","new_time","setState","prevState","clearInterval","nm","console","log","length","j","round","k","event","mode","new_i","new_mult_correct","mn","user_val","new_fact_correct","curr_guesses","curr_feedback","sort","a","b","join","feedback","new_correct","preventDefault","target","value","output","instructions","toFixed","id","onSubmit","type","placeholder","onChange","onClick","defaultProps","mult_trial","Quiz","callback","ref","question","readonly","App","myRef","createRef","intro","p","completed_segments","A","B","proc_s","s","replace","toUpperCase","fa","parseFloat","fb","isNaN","abs","paragraph","link","img","left","floatDir","style","minHeight","float","margin","href","quizes","quizes_correct","ans","grade_quiz","makeSection","circuits","connectFour","qupcakes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.977fe438.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Circuits.4061ed12.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/Connect4.9f0c9c48.png\";","export default __webpack_public_path__ + \"static/media/Qupcakes.57048413.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './YoutubeEmbed.css';\n\nconst YoutubeEmbed = ({ embedId }) => (\n  <div className=\"video-responsive\">\n    <iframe\n      width=\"853\"\n      height=\"480\"\n      src={`https://www.youtube.com/embed/${embedId}`}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n      title=\"Embedded youtube\"\n    />\n  </div>\n);\n\nYoutubeEmbed.propTypes = {\n  embedId: PropTypes.string.isRequired\n};\n\nexport default YoutubeEmbed;","import React from 'react'\nimport './CaesarShift.css';\n\nclass CaesarShift extends React.Component{\n\n  // shift_char(c){\n  //   return String.fromCharCode((c.toUpperCase().charCodeAt(0) + this.state.password) % 26)\n\n  // }\n\n  //https://stackoverflow.com/questions/9862761/how-to-check-if-character-is-a-letter-in-javascript\n  isLetter = (str) => {\n    return str.length === 1 && str.match(/[a-z]/i);\n  }\n\n\n  shiftChar = (pass, c) => {\n    if(this.isLetter(c)){\n      return String.fromCharCode((((c.toUpperCase().charCodeAt(0) + pass) - 'A'.charCodeAt(0)) % 26 + 26) % 26 + 'A'.charCodeAt(0))\n    }else{\n      return c\n    }\n  }\n  handleOnClickMinus = (event) => {\n    this.setState({\n      password: Math.max(this.state.password - 1, 0)\n    });\n  }\n  handleOnClickPlus = (event) => {\n    this.setState({\n      password: this.state.password + 1\n    });\n  }\n\n  handleOnClickBinary = (index) => {\n    let new_bits = [...this.state.bits];\n    new_bits[index] = (new_bits[index] + 1) % 2;\n    this.setState({\n      bits: new_bits\n    })\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: 0,\n      bits: Array(5).fill(0)\n    };\n  }\n\n\n  render(){\n    var actual_pass\n    if(this.props.binary){\n      actual_pass = parseInt(this.state.bits.join(''),2)\n    }\n    else{\n      actual_pass = Math.max(0, this.state.password)\n    }\n    var cipher = [...this.props.plaintext].map((c) => this.shiftChar(actual_pass, c));\n    var plain_alphabet = [...Array(26).keys()].map((i) => {return String.fromCharCode(i % 26 + 'A'.charCodeAt(0))});\n    var cipher_alphabet = plain_alphabet.map((c) => this.shiftChar(actual_pass, c))\n\n    var arrows = [...Array(26).keys()].map((_) => {return '↓'})\n    if(this.props.decode){\n      cipher = [...this.props.plaintext].map((c) => this.shiftChar(-actual_pass, c));\n      arrows = [...Array(26).keys()].map((_) => {return '↑'})\n    }\n    var cipher_out\n    if(this.props.decode){\n      cipher_out = (\n        <h className='CaesarShift-cipher'>\n           {cipher} ← {this.props.plaintext}\n        </h>\n        )\n    }\n    else{\n      cipher_out = (\n        <h className='CaesarShift-cipher'>\n           {this.props.plaintext} → {cipher}\n        </h>\n\n        )\n    }\n    var password_display\n    if(this.props.binary){\n\n      let bit_interface = [];\n      for(let i = 0; i<this.state.bits.length; i++){\n        bit_interface.push((\n          <div className='CaesarShift-bit-container'>\n            <h className='CaesarShift-pass'>\n              {this.state.bits[i]}\n            </h>\n            <button className='CaesarShift-binary-button' onClick={() => {this.handleOnClickBinary(i)}}>\n            +/-\n            </button>\n          </div>\n        ))\n      }\n      password_display = (\n        <div className='CaesarShift-binary-container'>\n          {bit_interface}\n          <h className='CaesarShift-pass'>\n          = {actual_pass}\n          </h>\n        </div>\n      )\n    }\n    else{\n      password_display = (\n        <div className='CaesarShift-password-contianer'>\n          <button className='CaesarShift-button' onClick={this.handleOnClickMinus}>\n            ⊖\n          </button>\n          <h className='CaesarShift-pass'>\n            {this.state.password}\n          </h>\n          <button className='CaesarShift-button' onClick={this.handleOnClickPlus}>\n            ⊕\n          </button>\n        </div>\n      )\n    }\n    return(\n      <div className=\"CaesarShift\">\n        {cipher_out}\n        <br/>\n        <br/>\n        <h className='CaesarShift-alpha-plain'>\n          {plain_alphabet.join(' ')}\n        </h>\n        <h className='CaesarShift-arrows'>\n          {arrows.join(' ')}\n        </h>\n        <h className='CaesarShift-alpha-cipher'>\n          {cipher_alphabet.join(' ')}\n        </h>\n        <br/>\n        <br/>\n\n        <h className=\"CaesarShift-header\">\n          Password\n        </h>\n        {password_display}\n      </div>\n      ); \n  }\n}\n\n\nexport default CaesarShift;\n","import React from 'react'\nimport './CaesarShift.css';\n\nclass Bits extends React.Component{\n\n  handleOnClickMinus = (event) => {\n    this.setState({\n      password: Math.max(this.state.password - 1, 0)\n    });\n  }\n  handleOnClickPlus = (event) => {\n    this.setState({\n      password: this.state.password + 1\n    });\n  }\n\n  handleOnClickBinary = (index) => {\n    let new_bits = [...this.state.bits];\n    new_bits[index] = (new_bits[index] + 1) % 2;\n    this.setState({\n      bits: new_bits\n    })\n  }\n\n  pad(num, size) {\n      num = num.toString();\n      while (num.length < size) num = \"0\" + num;\n      return num;\n  }\n\n  handleOnClickDecimal = (delta) => {\n    let new_bits = [...this.state.bits];\n    let new_value = Math.min(31, Math.max(0,(parseInt(this.state.bits.join(''),2) + delta)))\n    new_bits = this.pad(new_value.toString(2), this.state.bits.length).split('')\n\n    this.setState({\n      bits: new_bits\n    })\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      bits: Array(5).fill(0)\n    };\n  }\n\n\n  render(){\n\n    var bits_display\n\n    let bit_interface = [];\n    for(let i = 0; i<this.state.bits.length; i++){\n      let bit_button\n\n      if (this.props.binary){\n        bit_button = (\n          <button className='CaesarShift-binary-button' onClick={() => {this.handleOnClickBinary(i)}}>\n          +/-\n          </button>)\n      }\n\n      bit_interface.push((\n        <div className='CaesarShift-bit-container'>\n          <h className='CaesarShift-pass'>\n            {this.state.bits[i]}\n          </h>\n          {bit_button}\n        </div>\n      ))\n    }\n    let decimal_buttons\n    if(this.props.decimal){\n      decimal_buttons = (\n\n          <div style={{height:\"100%\"}}>\n            <button className='CaesarShift-decimal-button' onClick={() => {this.handleOnClickDecimal(-1)}}>\n            -\n            </button>\n            <button className='CaesarShift-decimal-button' onClick={() => {this.handleOnClickDecimal(1)}}>\n            +\n            </button>\n          </div>\n        )\n    }\n    bits_display = (\n      <div className='CaesarShift-binary-container'>\n        {bit_interface}\n        <h className='CaesarShift-pass'>\n        =\n        </h>\n        <div className='CaesarShift-bit-container'>\n          <h className='CaesarShift-pass'>\n            {parseInt(this.state.bits.join(''),2)}\n          </h>\n          {decimal_buttons}\n        </div>\n\n      </div>\n    )\n    \n\n    return(\n      <div className=\"CaesarShift\">\n        {bits_display}\n      </div>\n      ); \n  }\n}\n\n\nexport default Bits;\n","import React from 'react'\nimport './OneWay.css';\n// import './Form.css';\n\n\nexport class OneWay extends React.Component{\n\n\tget_rand_int = (n) => {return Math.floor(Math.random() * Math.floor(n));}\n\tprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631]\n\tpairs = [[31, 67], [17, 53], [67, 71], [53, 41], [43, 47], [67, 23], [61, 53], [71, 31], [53, 31], [71, 41], [29, 43], [23, 59], [59, 61], [37, 37], [37, 71], [41, 29], [29, 23], [31, 43], [43, 17], [59, 13], [17, 59], [41, 67], [23, 19], [19, 17], [47, 29], [13, 37]]\n\n\n\tstart_trials() {\n\t    // start timer after button is clicked\n\t    this.interval = setInterval(() => {\n\t    \tlet new_time = this.state.curr_time - .05\n\t    \tif(new_time > 0){\n\t\t      this.setState(prevState => ({\n\t\t        curr_time : new_time\n\t\t      }));\n\t    \t} else{\n\t\t\t\tthis.setState({\n\t\t\t\t\tfinished : true,\n\t\t\t\t})\n\t\t\t\tclearInterval(this.interval)\n\t    \t}\n\t    }, 50);\n\t    let nm = this.update_pairs(this.state.i)\n\t    this.setState({\n\t    \tstarted: true,\n\t    \tn: nm[0],\n\t    \tm: nm[1]\n\t    })\n\n\t}\n\n\n\tupdate_pairs(i){\n\t\tlet window_size = 4\n\t\tconsole.log(this.primes.length)\n\t\tlet j = parseInt(i - Math.round(Math.random() * window_size)) % this.primes.length\n\t\tlet k = parseInt(i - Math.round(Math.random() * window_size)) % this.primes.length\n\t\tlet n = this.primes[j]\n\t\tlet m = this.primes[k]\n\t\treturn [n, m]\n\t}\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.max_n = this.props.max_n || 12\n\t    this.mult_trials = this.props.mult_trials || 5\n\t    this.factor_trials = this.props.factor_trials || 5\n\t    this.start_time = parseInt(this.props.time || 60)\n\t    this.state = {\n\t      correct: 0,\n\t      i : 4,\n\t      attempts:0,\n\t      started:false,\n\t      mult_mode: true,\n\t      curr_time: this.start_time,\n\t      n : 0,\n\t      m : 0,\n\t      user_value: \"\",\n\t      finished: false,\n\t      guesses: [],\n\t    };\n\t    this.update_pairs = this.update_pairs.bind(this);\n\t    this.start_trials = this.start_trials.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\t    this.handleSubmit = this.handleSubmit.bind(this);\n\n\t}\n\n\thandleSubmit(event){\n\t\tif(this.props.mode === 'multiplication'){\n\t\t\tlet new_i = this.state.i\n\t\t\tlet new_mult_correct = this.state.correct\n\t\t\tif (parseInt(this.state.user_value) === this.state.m * this.state.n){\n\t\t\t\t\t// let new_times = [...this.state.mult_times]\n\t\t\t\t\tnew_i += 3\n\t\t\t\t\tnew_mult_correct += 1\n\t\t\t\t}\n\t\t\telse{\n\t\t\t\tnew_i += 1\n\t\t\t}\n\t\t\tlet mn = this.update_pairs(new_i)\n\t\t\tthis.setState(prevState => ({\n\t\t\t      correct: new_mult_correct,\n\t\t\t      attempts: prevState.attempts + 1,\n\t\t\t      i: new_i,\n\t\t\t      n :mn[0],\n\t\t\t      m: mn[1],\n\t\t\t      user_value:\"\",\n\t\t\t\t}));\n\t\t} else if(this.props.mode === 'factoring'){\n\t\t\tlet user_val = parseInt(this.state.user_value)\n\t\t\tconst sort_fun = (a, b) => {return a - b}\n\t\t\tlet new_i = this.state.i\n\t\t\tlet new_fact_correct = this.state.correct\n\t\t\tlet curr_guesses = []\n\t\t\tlet curr_feedback = \"\"\n\t\t\tlet mn = [this.state.n, this.state.m]\n\t\t\tif(this.state.m === user_val || this.state.n === user_val){\n\t\t\t\tnew_i += 3\n\t\t\t\tnew_fact_correct += 1\n\t\t\t\tmn = this.update_pairs(new_i)\n\t\t\t}else if(this.state.guesses.length < 3){\n\t\t\t\tcurr_guesses = [...this.state.guesses, user_val]\n\t\t\t\tcurr_feedback = (<h className='OneWay-header'>\n\t\t\t\t\tNot quite, try again!\n\t\t\t\t\t<br/>\n\t\t\t\t\tYou have already tried: {curr_guesses.sort(sort_fun).join(', ')}\n\t\t\t\t</h>)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnew_i += 1\n\t\t\t\tmn = this.update_pairs(new_i)\n\n\t\t\t}\n\t\t\tthis.setState(prevState => ({\n\t\t\t\ti: new_i,\n\t\t\t\tcorrect: new_fact_correct,\n\t\t\t    attempts: prevState.attempts + 1,\n\t\t\t\tn: mn[0],\n\t\t\t\tm: mn[1],\n\t\t     \tuser_value:\"\",\n\t\t     \tfeedback:curr_feedback,\n\t\t     \tguesses : curr_guesses\n\t\t\t}));\n\t\t} else if(this.props.mode === 'division'){\n\t\t\tlet new_i = this.state.i\n\t\t\tlet new_correct = this.state.correct\n\t\t\tif (parseInt(this.state.user_value) === this.state.m){\n\t\t\t\t\t// let new_times = [...this.state.mult_times]\n\t\t\t\t\tnew_i += 3\n\t\t\t\t\tnew_correct += 1\n\t\t\t\t}\n\t\t\telse{\n\t\t\t\tnew_i += 1\n\t\t\t}\n\t\t\tlet mn = this.update_pairs(new_i)\n\t\t\tthis.setState(prevState => ({\n\t\t\t      correct: new_correct,\n\t\t\t      attempts: prevState.attempts + 1,\n\t\t\t      i: new_i,\n\t\t\t      n :mn[0],\n\t\t\t      m: mn[1],\n\t\t\t      user_value:\"\",\n\t\t\t\t}));\n\t\t}\n\t\tevent.preventDefault();\n\t}\n\n\thandleChange(event){\n\t\tthis.setState({user_value: event.target.value});\n\t}\n\n\trender(){\n\t\tlet output\n\t\tlet instructions\n\t\tif(this.props.mode === 'multiplication'){\n\t\t\tinstructions = \"You are about to see a multiplication problem, do your best to solve it as quickly as possible.\"\n\t\t}else if(this.props.mode === 'factoring'){\n\t\t\tinstructions = \"You are about to see a number, do your best to find a factor of that number as quickly as possible.\"\n\t\t}else if(this.props.mode === 'division'){\n\t\t\tinstructions = \"You are about to see a division problem, do your best to solve it as quickly as possible.\"\n\t\t}\n\t\tlet feedback\n\t\tif (this.state.attempts > 0){\n\t\t\tfeedback = (\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.correct} correct out of {this.state.attempts}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\tif (this.state.finished){\n\t\t\toutput = (\n\t\t\t\t<div className='OneWay'>\n\t\t\t\t\t<h className='OneWay-header'>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\tIn {this.start_time} seconds, you correctly solved {this.state.correct} out of {this.state.attempts} {this.props.mode} problems!\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t</h>\n\t\t\t\t</div>\n\n\t\t\t)\n\t\t}\n\t\telse if (!this.state.started) {\n\t\t\toutput = (\n\t\t\t\t<div className='OneWay'>\n\t\t\t\t\t<h className='OneWay-header'>\n\t\t\t\t\t\t{instructions}\n\t\t\t\t\t</h>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<h className='OneWay-header'>\n\t\t\t\t\t\tReady?\n\t\t\t\t\t</h>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t        <button className='OneWay-button' onClick={this.start_trials}>\n\t\t\t            Start!\n\t\t\t        </button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse if(this.props.mode === 'multiplication'){\n\n\t\t\toutput = (\n\t\t\t\t<div className='OneWay'>\n\t\t\t\t\t<h className='OneWay-header'>\n\t\t\t\t\t\tTime: {this.state.curr_time.toFixed(0)}\n\t\t\t\t\t</h>\n\t\t\t\t\t<h className='OneWay-mult'>\n\t\t\t\t\t\t{this.state.m} x {this.state.n}\n\t\t\t\t\t</h>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<form id=\"form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input id=\"name\" type=\"text\" placeholder=\"Answer\" value={this.state.user_value} onChange={this.handleChange}/>\n\t\t\t\t\t\t<input id=\"submit\" type=\"submit\" value=\"Submit\"/>\n\t\t\t\t\t</form>\n\t\t\t\t\t{feedback}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if(this.props.mode === 'factoring'){\n\t\t\toutput = (\n\t\t\t\t<div className='OneWay'>\n\t\t\t\t\t<h className='OneWay-header'>\n\t\t\t\t\t\tTime: {this.state.curr_time.toFixed(0)}\n\t\t\t\t\t</h>\n\t\t\t\t\t<h className='OneWay-mult'>\n\t\t\t\t\t\tName a factor of: {this.state.n * this.state.m}\n\t\t\t\t\t</h>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<form id=\"form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input id=\"name\" type=\"text\" placeholder=\"Answer\" value={this.state.user_value} onChange={this.handleChange}/>\n\t\t\t\t\t\t<input id=\"submit\" type=\"submit\" value=\"Submit\"/>\n\t\t\t\t\t</form>\n\t\t\t\t\t{feedback}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else if(this.props.mode === 'division'){\n\t\t\toutput = (\n\t\t\t\t<div className='OneWay'>\n\t\t\t\t\t<h className='OneWay-header'>\n\t\t\t\t\t\tTime: {this.state.curr_time.toFixed(0)}\n\t\t\t\t\t</h>\n\t\t\t\t\t<h className='OneWay-mult'>\n\t\t\t\t\t\t{this.state.n * this.state.m} / {this.state.n}\n\t\t\t\t\t</h>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<form id=\"form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input id=\"name\" type=\"text\" placeholder=\"Answer\" value={this.state.user_value} onChange={this.handleChange}/>\n\t\t\t\t\t\t<input id=\"submit\" type=\"submit\" value=\"Submit\"/>\n\t\t\t\t\t</form>\n\t\t\t\t\t{feedback}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn output\t\n\t}\n\n}\n\nOneWay.defaultProps = {\n  mult_trial:4\n}\n\nexport default OneWay;","import React from 'react'\nimport './Quiz.css'\n\nexport class Quiz extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tuser_value : \"\",\n\t\t\tattempts : 0\n\t\t}\n\n        this.handleChange = this.handleChange.bind(this);\n\t    this.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(event){\n\t\tif(!this.props.correct){\n\t\t\tthis.setState({user_value: event.target.value});\n\t\t}\n\t}\n\n\thandleSubmit(event){\n\t\tevent.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\tattempts : prevState.attempts + 1\n\t\t}));\n\t\tthis.props.callback(this.state.user_value)\n\t}\n\n\trender(){\n\n\t\tlet feedback\n\t\tif(this.props.correct){\n\t\t\tfeedback = (<p className=\"quiz-correct\"> Correct! </p>)\n\t\t}\n\t\telse if (this.state.attempts > 0){\n\n\t\t\tfeedback = (<p className=\"quiz-incorrect\"> Not quite, try again! </p>)\n\t\t}\n\t\t// if(this.props.correct)\n\n\t\tconsole.log(this.props.ref)\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h1 className=\"quiz\"> Knowledge Check </h1>\n\t\t\t\t{this.props.question}\n\t\t\t\t<br/>\n\t\t\t\t<form className=\"quiz\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<input readonly className=\"quiz\" type=\"text\" placeholder=\"Answer\" value={this.state.user_value} onChange={this.handleChange}/>\n\t\t\t\t\t<input className=\"quiz\" type=\"submit\" value=\"Submit\"/>\n\t\t\t\t</form>\n\t\t\t\t{feedback}\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default Quiz;","import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport circuits from './Circuits.png'\nimport connectFour from './Connect4.png'\nimport qupcakes from './Qupcakes.png'\nimport YoutubeEmbed from './Components/YoutubeEmbed'\nimport CaesarShift from './Components/CaesarShift'\nimport Bits from './Components/Bits'\nimport OneWay from './Components/OneWay'\nimport Quiz from './Components/Quiz'\nimport { LoremIpsum } from \"react-lorem-ipsum\";\n\n\nexport class App extends React.Component{\n\n\n\n\n    string_comp(A, B){\n        let proc_s = (s) => {return s.replace(/\\s/g,'').toUpperCase()}\n        return proc_s(A) === proc_s(B)\n    }\n\n    number_comp(a, b){\n        let fa =  parseFloat(a)\n        let fb = parseFloat(b)\n        return (!isNaN(fa) && !isNaN(fb) && Math.abs(fa - fb) < 0.001)\n    }\n    constructor(props){\n        super(props)\n        this.myRef = React.createRef();\n\n\n        this.title = \"Welcome to Quander!\"\n        this.intro = (<div>\n                <h1 className=\"Main\"> {this.title}</h1>\n                    <br/>\n                    <p className=\"Main\">\n                        <LoremIpsum\n                            p={2}\n                        />\n                    </p>\n                    <br/>\n                    <YoutubeEmbed embedId=\"pxSk9VaLXA0\" />\n                    <br/>\n            </div>)\n\n\n        \n\n\n        this.state = {\n            completed_segments : {},\n        }\n    }\n\n\n    makeSection(title, paragraph, link, img, left) {\n        let floatDir = left ? 'left' : 'right'\n        return (\n            <div className=\"Main\" style={{minHeight:400}}>\n                <h1 className=\"Main\">{title}</h1>\n                <img src={img} width={300} style={{float:floatDir, margin:'15px'}}/>\n                <p className=\"Main\">\n                        {paragraph}\n                </p>\n                <a className=\"Main\" href={link}>Play now!</a>\n            </div>)\n    }\n\n\n\n    gen_quiz(i){\n        let callback = (ans) => {return this.grade_quiz(i, ans)}\n        return (\n            <div>\n                <Quiz question={this.quizes[i][0]} correct={this.state.quizes_correct[i]} callback={callback} />\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n            </div>)\n    }\n\n    render(){\n        let circuitsText = 'Help the EPIQC research center continue their research by solving pattern base puzzles!'\n        let connectText = 'Enjoy a classic board game with a quantum twist! Can you line up your pieces while dealing with the uncertainty?!?'\n        let qupcakesText = \"Orders Up! Deliver as many 'qupcakes' as possible while using gizmos to make sure every customer gets their favorite flavor!\"\n        let output = [\n            this.intro,\n            this.makeSection('Crazy Circuits', circuitsText, \"https://chord.cs.uchicago.edu/Quander/Circuits/\", circuits, true),\n            this.makeSection('Queue Bits', connectText, \"https://chord.cs.uchicago.edu/Quander/ConnectFour/\", connectFour),\n            this.makeSection('Qupcakes', qupcakesText, \"https://chord.cs.uchicago.edu/Quander/QuantumCafe/\", qupcakes, true),\n        ]\n\n\n\n        return (\n            <div className=\"App\">\n                <div className=\"Main\">\n                    {output}\n                </div>\n\n            </div>\n        )\n    }\n\n\n}\n\nfunction App2() {\n    let title = \"Quantum and Cryptography\"\n\n\n    return (\n        <div className=\"App\">\n        {/*    <div className=\"Menu\">\n            <h1 className=\"MenuHeader\"> {title}</h1>\n            <p className=\"MenuButton\">Pass</p>\n            </div>*/}\n            <div className=\"Main\">\n\n\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n// YKILQPAN","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}